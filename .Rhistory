all_ppl = adults + children_U5 + children_5_17)
# Add HHID variable to make our final dataset. This gives one record for each person.
x3 <- merge(x[,c(1,10)], x2, by = "slno")
# DATA CHECKING!! ---------------------------------------------------------
# check to make sure summation works as expected. Returns "TRUE" if it works
sum(x2$children_U5) == sum(x1$child_U5)
sum(x2$children_5_17)== sum(x1$child_5_17)
sum(x2$adult)== sum(x1$adult)
sum(x2$all_ppl) == sum(table(x1$hhid))
sum(table(x1$hhid)) == sum(x1$child_U5) + sum(x1$child_5_17) + sum(x1$adult)
# CHECK to make sure there are not people who were not counted
check <- data.frame(1)
for (i in 1:nrow(x1)){
if(x1$child_U5[i] < 1 & x1$child_5_17[i] < 1 & x1$adult[i] <1) {
check[i,] <- 1
} else {
check[i,]<-0  }
}
# Sums to 0 if everyone was counted
sum(check)
View(x2)
x2 <- ddply(x1, .(hhid),
summarize,
adults = sum(adult),
children_U5 = sum(child_U5),
children_5_17 = sum(child_5_17),
all_ppl = adults + children_U5 + children_5_17)
# Add HHID variable to make our final dataset. This gives one record for each person.
x3 <- merge(x[,c(1,10)], x2, by = "slno")
# DATA CHECKING!! ---------------------------------------------------------
# check to make sure summation works as expected. Returns "TRUE" if it works
sum(x2$children_U5) == sum(x1$child_U5)
sum(x2$children_5_17)== sum(x1$child_5_17)
sum(x2$adult)== sum(x1$adult)
sum(x2$all_ppl) == sum(table(x1$hhid))
sum(table(x1$hhid)) == sum(x1$child_U5) + sum(x1$child_5_17) + sum(x1$adult)
# CHECK to make sure there are not people who were not counted
check <- data.frame(1)
for (i in 1:nrow(x1)){
if(x1$child_U5[i] < 1 & x1$child_5_17[i] < 1 & x1$adult[i] <1) {
check[i,] <- 1
} else {
check[i,]<-0  }
}
# Sums to 0 if everyone was counted
sum(check)
View(x2)
View(x1)
# Author: Matthew Phelps
#Desc: Calculate number of people living in each household at baseline
# Intro -------------------------------------------------------------------
rm(list = ls())
graphics.off()
mac <- ""
pc <- "C:/Users/wrz741/Dropbox/C5 Baseline data/Pre-double entry"
setwd(pc)
rm(mac, pc)
library(plyr)
library(memisc) # read .spss files
HH_member_info<-as.data.set(spss.system.file('Q11.sav'), stringsAsFactors=FALSE)
# make it easier to work with in R.
# Please change "x" to a variable name that makes sense for you!
x1 <-as.data.frame(HH_member_info)
x1$hhid <-formatC(x1$hhid, width = 3, format = 'd', flag = 0)
# Author: Matthew Phelps
#Desc: Calculate number of people living in each household at baseline
# Intro -------------------------------------------------------------------
rm(list = ls())
graphics.off()
mac <- ""
pc <- "C:/Users/wrz741/Dropbox/C5 Baseline data/Pre-double entry"
setwd(pc)
rm(mac, pc)
library(plyr)
library(memisc) # read .spss files
HH_member_info<-as.data.set(spss.system.file('Q11.sav'), stringsAsFactors=FALSE)
# make it easier to work with in R.
# Please change "x" to a variable name that makes sense for you!
x1 <-as.data.frame(HH_member_info)
x1$hhid <-formatC(x1$hhid, width = 3, format = 'd', flag = 0)
# make dummy variable for each age range so counting will be easier
x1$child_U5 <- ifelse(x1$q11_4 < 5, 1, 0)
x1$child_5_17 <- ifelse(x1$q11_4 >= 5 & x1$q11_4 <18, 1, 0)
x1$adult <- ifelse(x1$q11_4 >= 18, 1, 0)
# For each unique "slno" in df "x", sum the number of adults, children U5 and children 5-17.
# Change "slno" to "hhid" if you wish to count based on HHID. This gives 1 record for each house
x2 <- ddply(x1, .(hhid),
summarize,
adults = sum(adult),
children_U5 = sum(child_U5),
children_5_17 = sum(child_5_17),
all_ppl = adults + children_U5 + children_5_17)
# Add HHID variable to make our final dataset. This gives one record for each person.
# x3 <- merge(x[,c(1,10)], x2, by = "slno")
# DATA CHECKING!! ---------------------------------------------------------
# check to make sure summation works as expected. Returns "TRUE" if it works
sum(x2$children_U5) == sum(x1$child_U5)
sum(x2$children_5_17)== sum(x1$child_5_17)
sum(x2$adult)== sum(x1$adult)
sum(x2$all_ppl) == sum(table(x1$hhid))
sum(table(x1$hhid)) == sum(x1$child_U5) + sum(x1$child_5_17) + sum(x1$adult)
# CHECK to make sure there are not people who were not counted
check <- data.frame(1)
for (i in 1:nrow(x1)){
if(x1$child_U5[i] < 1 & x1$child_5_17[i] < 1 & x1$adult[i] <1) {
check[i,] <- 1
} else {
check[i,]<-0  }
}
# Sums to 0 if everyone was counted
sum(check)
View(x1)
View(x2)
# Author: Matthew Phelps
#Desc: Calculate number of people living in each household at baseline
# Intro -------------------------------------------------------------------
rm(list = ls())
graphics.off()
pc <- "C:/Users/wrz741/Dropbox/C5_R_Codes/Rdata"
setwd(pc)
rm(pc)
library(plyr)
library(xlsx)
CurrentDate <- function(x) {
if (!is.na(x)) {
return(x)
} else {
x <- endDate
return(x)
}
}
load("X-1 Choleraphone distribution 31Jul15.Rdata")
load("X-2 monthly visits 31Jul15.Rdata")
endDate <- as.Date('31-12-14', "%d-%m-%y")
# RESTRICT TO DESIRED TIME-FRAME
a1 <- x1[x1$Date.of.phone.distribution <= endDate, ]
# Calculate number of days each unique household is active
for (i in 1:nrow(a1)) {
a1$Date.of.withdrawl.or.move[i] <- CurrentDate(a1$Date.of.withdrawl.or.move[i])
}
a1$daysActive <- as.numeric(a1$Date.of.withdrawl.or.move - a1$Date.of.phone.distribution)
rm(x1)
View(x2)
# Author: Matthew Phelps
#Desc: Calculate number of people living in each household at baseline
# Intro -------------------------------------------------------------------
rm(list = ls())
graphics.off()
mac <- ""
pc <- "C:/Users/wrz741/Dropbox/C5 Baseline data/Pre-double entry"
setwd(pc)
rm(mac, pc)
library(plyr)
library(memisc) # read .spss files
HH_member_info<-as.data.set(spss.system.file('Q11.sav'), stringsAsFactors=FALSE)
# make it easier to work with in R.
# Please change "x" to a variable name that makes sense for you!
x1 <-as.data.frame(HH_member_info)
x1$hhid <-formatC(x1$hhid, width = 3, format = 'd', flag = 0)
# make dummy variable for each age range so counting will be easier
x1$child_U5 <- ifelse(x1$q11_4 < 5, 1, 0)
x1$child_5_17 <- ifelse(x1$q11_4 >= 5 & x1$q11_4 <18, 1, 0)
x1$adult <- ifelse(x1$q11_4 >= 18, 1, 0)
# For each unique "slno" in df "x", sum the number of adults, children U5 and children 5-17.
# Change "slno" to "hhid" if you wish to count based on HHID. This gives 1 record for each house
baseline_ppl <- ddply(x1, .(hhid),
summarize,
adults = sum(adult),
children_U5 = sum(child_U5),
children_5_17 = sum(child_5_17),
all_ppl = adults + children_U5 + children_5_17)
# Add HHID variable to make our final dataset. This gives one record for each person.
# x3 <- merge(x[,c(1,10)], x2, by = "slno")
# DATA CHECKING!! ---------------------------------------------------------
# check to make sure summation works as expected. Returns "TRUE" if it works
sum(x2$children_U5) == sum(x1$child_U5)
sum(x2$children_5_17)== sum(x1$child_5_17)
sum(x2$adult)== sum(x1$adult)
sum(x2$all_ppl) == sum(table(x1$hhid))
sum(table(x1$hhid)) == sum(x1$child_U5) + sum(x1$child_5_17) + sum(x1$adult)
# CHECK to make sure there are not people who were not counted
check <- data.frame(1)
for (i in 1:nrow(x1)){
if(x1$child_U5[i] < 1 & x1$child_5_17[i] < 1 & x1$adult[i] <1) {
check[i,] <- 1
} else {
check[i,]<-0  }
}
# Sums to 0 if everyone was counted
sum(check)
# SAVE DATA ---------------------------------------------------------------
save(baseline_ppl, file = "baseline_ppl.Rdata")
# Author: Matthew Phelps
#Desc: Calculate number of people living in each household at baseline
# Intro -------------------------------------------------------------------
rm(list = ls())
graphics.off()
mac <- ""
pc <- "C:/Users/wrz741/Dropbox/C5 Baseline data/Pre-double entry"
setwd(pc)
rm(mac, pc)
library(plyr)
library(memisc) # read .spss files
HH_member_info<-as.data.set(spss.system.file('Q11.sav'), stringsAsFactors=FALSE)
# make it easier to work with in R.
# Please change "x" to a variable name that makes sense for you!
x1 <-as.data.frame(HH_member_info)
x1$hhid <-formatC(x1$hhid, width = 3, format = 'd', flag = 0)
# make dummy variable for each age range so counting will be easier
x1$child_U5 <- ifelse(x1$q11_4 < 5, 1, 0)
x1$child_5_17 <- ifelse(x1$q11_4 >= 5 & x1$q11_4 <18, 1, 0)
x1$adult <- ifelse(x1$q11_4 >= 18, 1, 0)
# For each unique "slno" in df "x", sum the number of adults, children U5 and children 5-17.
# Change "slno" to "hhid" if you wish to count based on HHID. This gives 1 record for each house
baseline_ppl <- ddply(x1, .(hhid),
summarize,
adults = sum(adult),
children_U5 = sum(child_U5),
children_5_17 = sum(child_5_17),
all_ppl = adults + children_U5 + children_5_17)
# Add HHID variable to make our final dataset. This gives one record for each person.
# x3 <- merge(x[,c(1,10)], baseline_ppl, by = "slno")
# DATA CHECKING!! ---------------------------------------------------------
# check to make sure summation works as expected. Returns "TRUE" if it works
sum(baseline_ppl$children_U5) == sum(x1$child_U5)
sum(baseline_ppl$children_5_17)== sum(x1$child_5_17)
sum(baseline_ppl$adult)== sum(x1$adult)
sum(baseline_ppl$all_ppl) == sum(table(x1$hhid))
sum(table(x1$hhid)) == sum(x1$child_U5) + sum(x1$child_5_17) + sum(x1$adult)
# CHECK to make sure there are not people who were not counted
check <- data.frame(1)
for (i in 1:nrow(x1)){
if(x1$child_U5[i] < 1 & x1$child_5_17[i] < 1 & x1$adult[i] <1) {
check[i,] <- 1
} else {
check[i,]<-0  }
}
# Sums to 0 if everyone was counted
sum(check)
# SAVE DATA ---------------------------------------------------------------
save(baseline_ppl, file = "baseline_ppl.Rdata")
load("baseline_ppl.Rdata")
# Author: Matthew Phelps
#Desc: Calculate number of people living in each household at baseline
# Intro -------------------------------------------------------------------
rm(list = ls())
graphics.off()
pc <- "C:/Users/wrz741/Dropbox/C5_R_Codes/Rdata"
setwd(pc)
rm(pc)
library(plyr)
library(xlsx)
CurrentDate <- function(x) {
if (!is.na(x)) {
return(x)
} else {
x <- endDate
return(x)
}
}
load("X-1 Choleraphone distribution 31Jul15.Rdata")
load("X-2 monthly visits 31Jul15.Rdata")
load("baseline_ppl.Rdata")
endDate <- as.Date('31-12-14', "%d-%m-%y")
# Author: Matthew Phelps
#Desc: Calculate number of people living in each household at baseline
# Intro -------------------------------------------------------------------
rm(list = ls())
graphics.off()
pc <- "C:/Users/wrz741/Dropbox/C5_R_Codes/Rdata"
setwd(pc)
rm(pc)
library(plyr)
library(xlsx)
CurrentDate <- function(x) {
if (!is.na(x)) {
return(x)
} else {
x <- endDate
return(x)
}
}
load("X-1 Choleraphone distribution 31Jul15.Rdata")
load("X-2 monthly visits 31Jul15.Rdata")
load("baseline_ppl.Rdata")
endDate <- as.Date('31-12-14', "%d-%m-%y")
save(baseline_ppl, file = "C:/Users/wrz741/Dropbox/C5_R_Codes/Rdata/baseline_ppl.Rdata")
# Author: Matthew Phelps
#Desc: Calculate number of people living in each household at baseline
# Intro -------------------------------------------------------------------
rm(list = ls())
graphics.off()
mac <- ""
pc <- "C:/Users/wrz741/Dropbox/C5 Baseline data/Pre-double entry"
setwd(pc)
rm(mac, pc)
library(plyr)
library(memisc) # read .spss files
HH_member_info<-as.data.set(spss.system.file('Q11.sav'), stringsAsFactors=FALSE)
# make it easier to work with in R.
# Please change "x" to a variable name that makes sense for you!
x1 <-as.data.frame(HH_member_info)
x1$hhid <-formatC(x1$hhid, width = 3, format = 'd', flag = 0)
# make dummy variable for each age range so counting will be easier
x1$child_U5 <- ifelse(x1$q11_4 < 5, 1, 0)
x1$child_5_17 <- ifelse(x1$q11_4 >= 5 & x1$q11_4 <18, 1, 0)
x1$adult <- ifelse(x1$q11_4 >= 18, 1, 0)
# For each unique "slno" in df "x", sum the number of adults, children U5 and children 5-17.
# Change "slno" to "hhid" if you wish to count based on HHID. This gives 1 record for each house
baseline_ppl <- ddply(x1, .(hhid),
summarize,
adults = sum(adult),
children_U5 = sum(child_U5),
children_5_17 = sum(child_5_17),
all_ppl = adults + children_U5 + children_5_17)
# Add HHID variable to make our final dataset. This gives one record for each person.
# x3 <- merge(x[,c(1,10)], baseline_ppl, by = "slno")
# DATA CHECKING!! ---------------------------------------------------------
# check to make sure summation works as expected. Returns "TRUE" if it works
sum(baseline_ppl$children_U5) == sum(x1$child_U5)
sum(baseline_ppl$children_5_17)== sum(x1$child_5_17)
sum(baseline_ppl$adult)== sum(x1$adult)
sum(baseline_ppl$all_ppl) == sum(table(x1$hhid))
sum(table(x1$hhid)) == sum(x1$child_U5) + sum(x1$child_5_17) + sum(x1$adult)
# CHECK to make sure there are not people who were not counted
check <- data.frame(1)
for (i in 1:nrow(x1)){
if(x1$child_U5[i] < 1 & x1$child_5_17[i] < 1 & x1$adult[i] <1) {
check[i,] <- 1
} else {
check[i,]<-0  }
}
# Sums to 0 if everyone was counted
sum(check)
# SAVE DATA ---------------------------------------------------------------
save(baseline_ppl, file = "C:/Users/wrz741/Dropbox/C5_R_Codes/Rdata/baseline_ppl.Rdata")
# Author: Matthew Phelps
#Desc: Calculate number of people living in each household at baseline
# Intro -------------------------------------------------------------------
rm(list = ls())
graphics.off()
pc <- "C:/Users/wrz741/Dropbox/C5_R_Codes/Rdata"
setwd(pc)
rm(pc)
library(plyr)
library(xlsx)
CurrentDate <- function(x) {
if (!is.na(x)) {
return(x)
} else {
x <- endDate
return(x)
}
}
load("X-1 Choleraphone distribution 31Jul15.Rdata")
load("X-2 monthly visits 31Jul15.Rdata")
load("baseline_ppl.Rdata")
endDate <- as.Date('31-12-14', "%d-%m-%y")
View(baseline_ppl)
View(x1)
View(baseline_ppl)
# Author: Matthew Phelps
#Desc: Calculate number of people living in each household at baseline
# Intro -------------------------------------------------------------------
rm(list = ls())
graphics.off()
mac <- ""
pc <- "C:/Users/wrz741/Dropbox/C5 Baseline data/Pre-double entry"
setwd(pc)
rm(mac, pc)
library(plyr)
library(memisc) # read .spss files
HH_member_info<-as.data.set(spss.system.file('Q11.sav'), stringsAsFactors=FALSE)
# make it easier to work with in R.
# Please change "x" to a variable name that makes sense for you!
x1 <-as.data.frame(HH_member_info)
x1$hhid <-formatC(x1$hhid, width = 3, format = 'd', flag = 0)
# make dummy variable for each age range so counting will be easier
x1$child_U5 <- ifelse(x1$q11_4 < 5, 1, 0)
x1$child_5_17 <- ifelse(x1$q11_4 >= 5 & x1$q11_4 <18, 1, 0)
x1$adult <- ifelse(x1$q11_4 >= 18, 1, 0)
View(x1)
# Author: Matthew Phelps
#Desc: Calculate number of people living in each household at baseline
# Intro -------------------------------------------------------------------
rm(list = ls())
graphics.off()
pc <- "C:/Users/wrz741/Dropbox/C5_R_Codes/Rdata"
setwd(pc)
rm(pc)
library(dplyr)
library(xlsx)
CustomEndDate <- function(x) {
# Returns the specified end date if the withdrawl field is null
if (x < endDate & !is.na(x)){
return(x)
} else {
x <- endDate
return(x)
}
}
personTime <- function(x, factor = x$unique_ID) {
# Calculates person time for each specified date range
x1 <- split(x, factor)
for (j in 1:length(x1)) {
x1[[j]]$pt <-0
for (i in 1:nrow(x1[[j]])) {
if(i == 1 & nrow(x1[[j]]) != 1) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$date.monthly.visit[i] - x1[[j]]$Date.phone.distribution[i]) * x1[[j]]$Num_ppl[i]
} else if (nrow(x1[[j]]) == 1) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$Date.withdrawl.move[i] - x1[[j]]$Date.phone.distribution[i])
}
else if(i > 1 & i < nrow(x)) {
x1[[j]]$pt[i] <- as.numeric(x$date.monthly.visit[i] - x1[[j]]$date.monthly.visit[i-1]) * x1[[j]]$Num_ppl[i]
} else {
x1[[j]]$pt[i] <- as.numeric((x1[[j]]$Date.withdrawl.move[i] - x1[[j]]$date.monthly.visit[i]) +
(x1[[j]]$date.monthly.visit[i] - x1[[j]]$date.monthly.visit[i-1])) * x1[[j]]$Num_ppl[i]
}
}
}
return(x1)
}
load("X-1 Choleraphone distribution 31Jul15.Rdata")
load("X-2 monthly visits 31Jul15.Rdata")
endDate <- as.Date('31-12-14', "%d-%m-%y")
# Rename variables for less space.
x2 <- rename(x2, Num_ppl_monthly = Numer.of.ppl.in.household.at.monthly.visit,
date.monthly.visit = Date.of.monthly.visit)
x1 <- rename(x1, Date.baseline = Date.of.baseline, Date.phone.distribution = Date.of.phone.distribution,
Date.withdrawl.move = Date.of.withdrawl.or.move)
# RESTRICT TO DESIRED TIME-FRAME
a1 <- x1[x1$Date.phone.distribution <= endDate, ]
rm(x1)
a2 <- x2[x2$date.monthly.visit <= endDate,]
rm(x2)
# Calculate number of days each unique household is active
for (i in 1:nrow(a1)) {
a1$Date.withdrawl.move[i] <- CustomEndDate(a1$Date.withdrawl.move[i])
}
# a1$daysActive <- as.numeric(a1$Date.of.withdrawl.or.move - a1$Date.of.phone.distribution)
# MERGE - Keep all records at first to find missing data
a3 <- merge(a2, a1, by ="unique_ID", all=T, suffixes = c("", ".y"))
a3$HHID.y <- a3$Listing.number.y <- NULL
# PERSONE TIME for each household during each time-frame
a4 <- personTime(a3)
# Return to Data Frame for easier reading.
a5 <- do.call(rbind.data.frame, a4)
row.names(a5) <- NULL
View(a5)
j=24
i =2
x1 <- split(a3, factor)
x1 <- split(a3, a3$unique_ID)
if(i == 1 & nrow(x1[[j]]) != 1) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$date.monthly.visit[i] - x1[[j]]$Date.phone.distribution[i]) * x1[[j]]$Num_ppl[i]
} else if (nrow(x1[[j]]) == 1) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$Date.withdrawl.move[i] - x1[[j]]$Date.phone.distribution[i]) * x1[[j]]$Num_ppl[i]
} else if(i > 1 & i < nrow(x)) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$date.monthly.visit[i] - x1[[j]]$date.monthly.visit[i-1]) * x1[[j]]$Num_ppl[i]
} else {
x1[[j]]$pt[i] <- as.numeric((x1[[j]]$Date.withdrawl.move[i] - x1[[j]]$date.monthly.visit[i]) +
(x1[[j]]$date.monthly.visit[i] - x1[[j]]$date.monthly.visit[i-1])) * x1[[j]]$Num_ppl[i]
}
if(i == 1 & nrow(x1[[j]]) != 1) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$date.monthly.visit[i] - x1[[j]]$Date.phone.distribution[i]) * x1[[j]]$Num_ppl[i]
} else if (nrow(x1[[j]]) == 1) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$Date.withdrawl.move[i] - x1[[j]]$Date.phone.distribution[i]) * x1[[j]]$Num_ppl[i]
} else if(i > 1 & i < nrow(x1)) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$date.monthly.visit[i] - x1[[j]]$date.monthly.visit[i-1]) * x1[[j]]$Num_ppl[i]
} else {
x1[[j]]$pt[i] <- as.numeric((x1[[j]]$Date.withdrawl.move[i] - x1[[j]]$date.monthly.visit[i]) +
(x1[[j]]$date.monthly.visit[i] - x1[[j]]$date.monthly.visit[i-1])) * x1[[j]]$Num_ppl[i]
}
if(i == 1 & nrow(x1[[j]]) != 1) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$date.monthly.visit[i] - x1[[j]]$Date.phone.distribution[i]) * x1[[j]]$Num_ppl[i]
} else if (nrow(x1[[j]]) == 1) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$Date.withdrawl.move[i] - x1[[j]]$Date.phone.distribution[i]) * x1[[j]]$Num_ppl[i]
} else if(i > 1 && i < nrow(x1)) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$date.monthly.visit[i] - x1[[j]]$date.monthly.visit[i-1]) * x1[[j]]$Num_ppl[i]
} else {
x1[[j]]$pt[i] <- as.numeric((x1[[j]]$Date.withdrawl.move[i] - x1[[j]]$date.monthly.visit[i]) +
(x1[[j]]$date.monthly.visit[i] - x1[[j]]$date.monthly.visit[i-1])) * x1[[j]]$Num_ppl[i]
}
i > 1
i < nrow(x1)
nrow(x1)
i < nrow(x1[[j]]
i < nrow(x1[[j]])
i > 1 & i < nrow(x1[[j]])
if(i == 1 & nrow(x1[[j]]) != 1) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$date.monthly.visit[i] - x1[[j]]$Date.phone.distribution[i]) * x1[[j]]$Num_ppl[i]
} else if (nrow(x1[[j]]) == 1) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$Date.withdrawl.move[i] - x1[[j]]$Date.phone.distribution[i]) * x1[[j]]$Num_ppl[i]
} else if(i > 1 & i < nrow(x1[[j]])) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$date.monthly.visit[i] - x1[[j]]$date.monthly.visit[i-1]) * x1[[j]]$Num_ppl[i]
} else {
x1[[j]]$pt[i] <- as.numeric((x1[[j]]$Date.withdrawl.move[i] - x1[[j]]$date.monthly.visit[i]) +
(x1[[j]]$date.monthly.visit[i] - x1[[j]]$date.monthly.visit[i-1])) * x1[[j]]$Num_ppl[i]
}
}
if(i == 1 & nrow(x1[[j]]) != 1) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$date.monthly.visit[i] - x1[[j]]$Date.phone.distribution[i]) * x1[[j]]$Num_ppl[i]
} else if (nrow(x1[[j]]) == 1) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$Date.withdrawl.move[i] - x1[[j]]$Date.phone.distribution[i]) * x1[[j]]$Num_ppl[i]
} else if(i > 1 & i < nrow(x1[[j]])) {
x1[[j]]$pt[i] <- as.numeric(x1[[j]]$date.monthly.visit[i] - x1[[j]]$date.monthly.visit[i-1]) * x1[[j]]$Num_ppl[i]
} else {
x1[[j]]$pt[i] <- as.numeric((x1[[j]]$Date.withdrawl.move[i] - x1[[j]]$date.monthly.visit[i]) +
(x1[[j]]$date.monthly.visit[i] - x1[[j]]$date.monthly.visit[i-1])) * x1[[j]]$Num_ppl[i]
}
x1[[24]]
i == 1 & nrow(x1[[j]]) != 1& x1[[j]]$date.monthly.visit[i] > x1[[j]]$Date.phone.distribution[i]
